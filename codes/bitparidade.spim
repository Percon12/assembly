.data
entradaincorreta: .asciiz "entrada incorreta\n"
bitparidade: .asciiz "bit-paridade: "
saida: .asciiz "\nsaida: "
barran: .asciiz "\n"

.text

main:

	li $v0, 5
	syscall 
	move $t0, $v0

	move $t6, $t0

	move $t1, $zero
	addi $t1, $t1, 128

	sle $t2, $t0, $t1 
	beq $t2, $zero, erro

	move $t5, $zero


	loop:
		li $t3, 2

		div $t0, $t3 

		mfhi $t4

		add $t5, $t5, $t4

		srl $t0, $t0, 1

		bne $t0, $zero, loop

		b continua

	erro:
		la $a0, entradaincorreta
		li $v0, 4
		syscall

		li $v0, 10
		syscall

	continua:
		div $t5, $t3 

		mfhi $t4

		bne $t4, $zero, impar
		li $t4, 0
		b final

		impar:
			add $t6, $t6, $t1
			li $t4, 1
			b final

		final:
			la $a0, bitparidade
			li $v0, 4
			syscall
			
			li $v0, 1
			move $a0, $t4
			syscall

			la $a0, saida
			li $v0, 4
			syscall

			li $v0, 1
			move $a0, $t6
			syscall

			la $a0, barran
			li $v0, 4
			syscall

			li $v0, 10
			syscall
